name: Release

on:
  pull_request:
  push:

jobs:
  build:
    name: Publishing for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: macos-latest
            artifact_prefix: macos
            target: darwin_amd64
          - os: ubuntu-latest
            artifact_prefix: linux
            target: linux_amd64

    steps:
      - name: Checking out sources
        uses: actions/checkout@v2

      - name: Installing needed macOS dependencies
        if: matrix.os == 'macos-latest'
        run: make setup-macos

      - name: Installing needed Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: make setup-ubuntu

      - name: Running build for macos
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p bin/${{ matrix.target }}
          dart2native bin/flutter_gen_command.dart -o dist/${{ matrix.target }}/fluttergen

      - name: Running build for ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p bin/${{ matrix.target }}
          /usr/lib/dart/bin/dart2native bin/flutter_gen_command.dart -o dist/${{ matrix.target }}/fluttergen

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
